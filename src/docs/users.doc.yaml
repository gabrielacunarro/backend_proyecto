components:
  schemas:
    Register:
      type: object
      properties:
        name:
          type: string
          description: Name of the user
        last_name:
          type: string  
          description: Last name of the user
        email:
          type: string
          description: Email of the user
        password:
          type: string
          description: Password to log
      example:
        name: gabriela
        last_name: Cuñarro
        email: gabi@gmail.com    
        password: hola1234
    User:
      type: object
      properties:
        name:
          type: string
          description: Name of the user
        last_name:
          type: string
          description: Last name of the user
        email:
          type: string
          description: Email of the user
        password:
          type: string
          description: Password to log
        role:
          type: integer
          description: Role of the user
      example:
        name: gabriela
        last_name: Cuñarro
        email: gabi@gmail.com
        password: hola1234
        role: 1
    ErrorPayload:
      type: object
      properties:
        message:
          type: string
          description: Error message
  responses:
    res201:
      description: User successfully created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Register'
    res400:
      description: Invalid password
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                description: Error message
              payload:
                $ref: '#/components/schemas/ErrorPayload'
    res401:
      description: User already exists
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                description: Error message
              payload:
                $ref: '#/components/schemas/ErrorPayload'
    res403:
      description: Forbbiden
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                description: Error message
              payload:
                $ref: '#/components/schemas/ErrorPayload'
    res404:
      description: Not found
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                description: Error message
              payload:
                $ref: '#/components/schemas/ErrorPayload'
    res500:
      description: Fatal
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                description: Error message
              payload:
                $ref: '#/components/schemas/ErrorPayload'
paths:
  /users:
    post:
      summary: Create a new user
      description: Creates a new user with the provided data.
      operationId: createUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '201':
          $ref: '#/components/responses/res201'
        '400':
          $ref: '#/components/responses/res400'
        '401':
          $ref: '#/components/responses/res401'
        '500':
          $ref: '#/components/responses/res500'

    get:
      summary: Get all users
      description: Retrieves a list of all users.
      operationId: getUsers
      tags:
        - Users
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '403':
          $ref: '#/components/responses/res403'
        '500':
          $ref: '#/components/responses/res500'

  /users/{uid}:
    get:
      summary: Get user by ID
      description: Retrieves a single user by their ID.
      operationId: getUserById
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          description: ID of the user to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: User details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          $ref: '#/components/responses/res404'
        '500':
          $ref: '#/components/responses/res500'

    put:
      summary: Update user
      description: Updates the details of an existing user.
      operationId: updateUser
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          description: ID of the user to update.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          $ref: '#/components/responses/res200'
        '400':
          $ref: '#/components/responses/res400'
        '401':
          $ref: '#/components/responses/res401'
        '404':
          $ref: '#/components/responses/res404'
        '500':
          $ref: '#/components/responses/res500'

    delete:
      summary: Delete user
      description: Deletes an existing user.
      operationId: deleteUser
      tags:
        - Users
      parameters:
        - in: path
          name: uid
          required: true
          description: ID of the user to delete.
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully.
        '404':
          $ref: '#/components/responses/res404'
        '500':
          $ref: '#/components/responses/res500'










components:
  schemas:
    Session:
      type: object
      properties:
        name:
          type: string
          description: Name of the user
        email:
          type: string
          format: email
          description: Email of the user
        password:
          type: string
          description: Password to log
      example:
        name: Gabriela Cu√±arro
        email: gabrielacunarro@gmail.com
        password: hola1234

  responses:
    session:
      res200:
        description: Successfully logged in
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Session'
      res400:
        description: Invalid request payload or credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorPayload'
      res401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorPayload'
      res404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorPayload'
      res500:
        description: Internal server error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorPayload'

paths:
  /api/sessions/register:
    post:
      summary: Register a new user
      tags:
        - Sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Session'
      responses:
        '201':
          description: User successfully registered
        '400':
          $ref: '#/components/responses/session/res400'
        '500':
          $ref: '#/components/responses/session/res500'
  /api/sessions/login:
    post:
      summary: Log in with existing credentials
      tags:
        - Sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Session'
      responses:
        '200':
          $ref: '#/components/responses/session/res200'
        '400':
          $ref: '#/components/responses/session/res400'
        '401':
          $ref: '#/components/responses/session/res401'
        '500':
          $ref: '#/components/responses/session/res500'
  /api/sessions/signout:
    post:
      summary: Sign out the current user
      tags:
        - Sessions
      responses:
        '200':
          description: Successfully signed out
        '500':
          $ref: '#/components/responses/session/res500'
  /api/sessions/verifyAccount:
    post:
      summary: Verify user's account
      tags:
        - Sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Verification'
      responses:
        '200':
          description: User account verified successfully
        '400':
          $ref: '#/components/responses/session/res400'
        '404':
          $ref: '#/components/responses/session/res404'
        '500':
          $ref: '#/components/responses/session/res500'
  /api/sessions/password:
    put:
      summary: Update user's password
      tags:
        - Sessions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordUpdate'
      responses:
        '200':
          description: Password updated successfully
        '400':
          $ref: '#/components/responses/session/res400'
        '404':
          $ref: '#/components/responses/session/res404'
        '500':
          $ref: '#/components/responses/session/res500'
